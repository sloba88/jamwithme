<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>{% block title %}Welcome!{% endblock %}</title>
    {% block stylesheets %}{% endblock %}
    <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap -->
    <link href="{{ asset('/css/bootstrap.css') }}" rel="stylesheet" media="screen">
    <link href="{{ asset('/css/select2.css') }}" rel="stylesheet"/>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.10.4/themes/smoothness/jquery-ui.css">
    <link href="{{ asset('/css/main.css') }}" rel="stylesheet"/>

    <!-- HTML5 Shim and Respond.js add IE8 support of HTML5 elements and media queries -->
    {% include 'BraincraftedBootstrapBundle::ie8-support.html.twig' %}

    <script src="https://cdn.socket.io/socket.io-1.0.4.js"></script>
    <script src="http://95.85.32.166:3000/socket.io/socket.io.js"></script>

    <script>
        baseURL = '{{ app.request.getBaseURL() }}';
        var socket = io('http://95.85.32.166:3000');

        {% if app.user %}
        socket.on('registerConnectedUser', function (data) {
            socket.emit('registerUserData', { userID: '{{ app.user.id }}', 'username': '{{ app.user.username }}' });
        });
        {% endif     %}
    </script>

</head>
<body>

<!-- Fixed navbar -->
<div class="navbar navbar-default navbar-fixed-top" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <a class="navbar-brand" href="{{ path('home') }}"><img src="{{ asset('images/logo.png') }}" alt="JamWithMee" /></a>
        </div>
        <ul class="nav navbar-nav navbar-left">
            <li {% if app.request.attributes.get('_route') == 'home' %}class="active"{% endif %}><a href="{{ path('home') }}"><span class="glyphicon glyphicon-home"></span></a></li>
            <li {% if app.request.attributes.get('_route') == 'musicians' %}class="active"{% endif %}><a href="{{ path('musicians') }}">Musicians</a></li>
            <li {% if app.request.attributes.get('_route') == 'jams' %}class="active"{% endif %}><a href="{{ path('jams') }}">Jams</a></li>
        </ul>
        <ul class="nav navbar-nav navbar-right">
            {% if is_granted("ROLE_USER") %}

                <li><a href="{{ path('musician_profile', {'username': app.user.username}) }}" class="user-box-image-link img-circle" style="padding:0">
                        <img width="30" src="{{ path('musician_avatar', { 'username': app.user.username }) }}" class="" />
                    </a>
                </li>

                {#<li {% if app.request.attributes.get('_route') == 'notifications' %}class="active"{% endif %}><a href="&#123;&#35;{{ path('notifications') }}&#35;&#125;">Notifications</a></li>#}
                <li {% if app.request.attributes.get('_route') == 'inbox' %}class="active"{% endif %}><a href="{{ path('inbox') }}" id="messages-nav"><span class="glyphicon glyphicon-envelope"></span> <span class="badge"></span></a></li>
                <li {% if app.request.attributes.get('_route') == 'fos_user_profile_edit' %}class="active"{% endif %}><a href="{{ path('fos_user_profile_edit') }}"><span class="glyphicon glyphicon-cog"></span></a></li>
                <li {% if app.request.attributes.get('_route') == 'start_jam' %}class="active"{% endif %}><a href="{{ path('start_jam') }}">Start a jam</a></li>
                <li {% if app.request.attributes.get('_route') == 'fos_user_security_logout' %}class="active"{% endif %}><a href="{{ path('fos_user_security_logout') }}"><span class="glyphicon glyphicon-off"></span></a></li>
            {% else %}
                <li {% if app.request.attributes.get('_route') == 'fos_user_security_login' %}class="active"{% endif %}><a href="{{ path('fos_user_security_login') }}">Login</a></li>
                <li {% if app.request.attributes.get('_route') == 'fos_user_registration_register' %}class="active"{% endif %}><a href="{{ path('fos_user_registration_register') }}">Register</a></li>
            {% endif %}
        </ul>
    </div>
</div>

<div class="container">

    {% for flashMessage in app.session.flashbag.get('success') %}
        <div class="flash-message alert alert-success">
            <em>{{ flashMessage }}</em>
        </div>
    {% endfor %}

    {% for flashMessage in app.session.flashbag.get('error') %}
        <div class="flash-message alert alert-danger">
            <em>{{ flashMessage }}</em>
        </div>
    {% endfor %}

    {% block body %}{% endblock %}
    {% block fos_user_content %}
    {% endblock fos_user_content %}

</div>
<!-- jQuery (necessary for Bootstraps JavaScript plugins) -->
<!--<script src="https://code.jquery.com/jquery.js"></script>-->
<script src="{{ asset('/js/jquery.js') }}"></script>
<script src="{{ asset('/js/select2.min.js') }}"></script>
<!-- Include all JavaScripts, compiled by Assetic -->
<script src="{{ asset('/js/bootstrap.js') }}"></script>
<script src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script src="{{ asset('/js/vendor/bootstrap-typeahead.js') }}"></script>
<script src="{{ asset('/js/vendor/jquery-ui.min.js') }}"></script>
<script src="{{ asset('bundles/jamlocation/jquery.ui.addresspicker.js') }}"></script>
<script src="{{ asset('bundles/jamlocation/location.js') }}"></script>
<script src="{{ asset('js/vendor/underscore-min.js') }}"></script>
<script src="{{ asset('js/vendor/isotope.pkgd.min.js') }}"></script>
{% block javascripts %}{% endblock %}

<script>

    jQuery(document).ready(function() {
        $(".instrument-select").select2({
            placeholder: 'What do you play?'
        });

        $("#fos_user_profile_form_genres, #form_genres, #fos_user_registration_form_genres, #jam_genres").select2({
            placeholder: 'Whats music do you play?'
        });

        $("#fos_user_registration_form_brands, #fos_user_profile_form_brands").select2({
            placeholder: 'Favorite brands?'
        });

        $("#search_form_genres").select2({
            placeholder: 'Filter by genres'
        });

        $("#search_form_instruments").select2({
            placeholder: 'Filter by instruments'
        });

        $("#distance-slider").slider({
            range: "min",
            value: $("#search_form_distance").val(),
            step: 1,
            min: 1,
            max: 20,
            slide: function(event, ui) {
                $("#search_form_distance").val(ui.value).trigger('change');
            }
        });

        var $container = $('.profile-media-wall').isotope({
            // main isotope options
            itemSelector: '.profile-media-wall-item',
            layoutMode: 'fitRows',
            // options for cellsByRow layout mode
            // options for masonry layout mode
            masonry: {
                columnWidth: 150
            }
        })

    });

    var jamMembersCollectionHolder = $("#jam_members")
    var musicianInstrumentsCollectionHolder = $("#musician_instruments")
    var videosCollectionHolder = $("#musician_videos")

    jQuery(document).ready(function() {

        $("#add_another_image").click(function(e){
            e.preventDefault();
            addCollectionForm(imagesCollectionHolder, 'images');
        });

        $("#add_another_member").on('click', function(e){
            e.preventDefault();
            addCollectionForm(jamMembersCollectionHolder, 'members');
        });

        $("#add_another_instrument").on('click', function(e){
            e.preventDefault();
            addCollectionForm(musicianInstrumentsCollectionHolder, 'instruments');
        });

        $("#add_another_video").on('click', function(e){
            e.preventDefault();
            addCollectionForm(videosCollectionHolder, 'instruments');
        });

        $(document).on('click', '.make-primary-image', function(){
            $('.make-primary-image').attr('checked', false);
            $(this).prop('checked', true).attr('checked', true);
        });

        $(document).on('click', '.remove-image', function(e){
            e.preventDefault();
            $(this).parents('.image-holder').remove();
        });

        $(".price-type").click(function(){
            $('.price-type').attr('checked', false);
            $(this).prop('checked', true).attr('checked', true);
            $("#ad_price").val('');
        });

        $(".remove-image-ajax").on('click', function(e){
            e.preventDefault();
            var url = $(this).data('url');
            var image = $(this).parents('.image-holder');
            $.ajax({
                url: url
            }).done(function( result ) {
                if (result.status == 'success'){
                    image.remove();
                }
            });
        });

        $(".send-message").on('keyup', function(e){
            if(e.which == 13) {
                var self = $(this);
                var value = $(this).val();
                var toID = $(this).data('toid');
                var toUsername = $(this).data('tousername');

                if ($.trim(value)=='') return false;

                socket.emit('newMessage', {
                    message: value,
                    to: {
                        id: toID,
                        username: toUsername
                    }
                });

                self.val('');
            }
        });

        $(".set-profile-photo").on('click', function(e){
            e.preventDefault();
            var url = $(this).data('url');
            $.ajax({
                url: url
            }).done(function( result ) {
                if (result.status == 'success'){
                    //image.remove();
                    window.location.reload();
                }
            });

        });

        socket.on('myUnreadMessagesCount', function(data){
            if (data!=0){
                $("#messages-nav .badge").text(data);
            }else{
                $("#messages-nav .badge").text('');
            }
        });

    });



    function addCollectionForm(collectionHolder, type) {
        var prototype = collectionHolder.data('prototype');
        var index = collectionHolder.data('index');
        var newForm = prototype.replace(/__name__/g, index);

        // increase the index with one for the next item
        collectionHolder.data('index', index + 1);
        collectionHolder.append(newForm);
    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            if(input.files[0].size>3000000){
                alert('{{ 'Photo is too big. Please upload a file that is less than 3MB'|trans }}');
                $(input).val(null);
                return false;
            }
            var image  = new Image();
            var reader = new FileReader();
            reader.readAsDataURL(input.files[0]);
            reader.onload = function (e) {
                //parent parent is stupid

                image.src    = e.target.result;
                image.onload = function() {
                    var w = this.width,
                            h = this.height;

                    if(w<320 || h<190){
                        alert('{{ 'Please choose a picture larger than 320x190'|trans }}');
                        $(input).val('');
                        return false;
                    }

                    var image_holder = $(input).parents('.image-holder');
                    image_holder.append('<img src="" width="200" />');
                    image_holder.find('img').attr('src', e.target.result);
                    image_holder.find('.make-primary-image').parent().show();
                    image_holder.find('.remove-image').show();
                    image_holder.find('.upload').hide();
                    if($('.image-preview').length==1){
                        image_holder.find('.make-primary-image').prop('checked', true).attr('checked', true);
                    }
                };
            }
        }
    }

    $(function() {
        $("#fos_user_profile_form_artists2" ).autocomplete({
            source: function( request, response ) {
                $.ajax({
                    url: "http://developer.echonest.com/api/v4/artist/suggest",
                    dataType: "jsonp",
                    data: {
                        results: 12,
                        api_key: "AVZ7NYSNWRRUQVWXS",
                        format:"jsonp",
                        name:request.term
                    },
                    success: function( data ) {
                        response( $.map( data.response.artists, function(item) {
                            return {
                                label: item.name,
                                value: item.name,
                                id: item.id
                            }
                        }));
                    }
                });
            },
            minLength: 3,
            select: function( event, ui ) {
                $("#log").empty();
                $("#log").append(ui.item ? ui.item.id + ' ' + ui.item.label : '(nothing)');
            }
        });

        $("#fos_user_profile_form_artists").select2({
            placeholder: "Favourite Artists?",
            minimumInputLength: 2,
            multiple: true,
            initSelection : function (element, callback) {
                var data = [];
                $(element.val().split(",")).each(function () {
                    data.push({id: this, text: this});
                });
                callback(data);
            },
            ajax: {
                url: "http://developer.echonest.com/api/v4/artist/suggest",
                dataType: "jsonp",
                results: function (data) {
                    //console.log(data);
                    return {results: $.map( data.response.artists, function(item) {
                        return {
                            text: item.name,
                            value: item.name,
                            id: item.name
                        }
                    })}
                },
                data: function (term, page) {
                    return {
                        results: 12,
                        api_key: "AVZ7NYSNWRRUQVWXS",
                        format:"jsonp",
                        name: term
                    };
                }
            }
        });

        $('#list-tab-btn').on('shown.bs.tab', function (e) {
            $(".filter-container").prependTo("#list");
            $('.tabs .active').removeClass('active');
            $(this).addClass('active');
            $(".filter-container").parents('.tab-content').removeClass('full-screen');
        });

        $("#map-tab-btn").on('shown.bs.tab', function (e) {
            $(".filter-container").appendTo(".map-view-container");
            $('.tabs .active').removeClass('active');
            $(this).addClass('active');
            $(".filter-container").parents('.tab-content').addClass('full-screen');
        });

        // store the currently selected tab in the hash value
        $("ul.nav-tabs > li > a").on("shown.bs.tab", function (e) {
            var id = $(e.target).attr("href").substr(1);
            window.location.hash = id;
        });

        // on load of the page: switch to the currently selected tab
        var hash = window.location.hash;
        $('ul.nav-tabs a[href="' + hash + '"]').tab('show');

        setTimeout(function(){
            $(".flash-message").fadeOut();
        },3000)

    });

    function scrollToBottom(){
        var wtf    = $('.conversation-message-box');
        var height = wtf[0].scrollHeight;
        wtf.scrollTop(height);
    }

</script>

</body>
</html>
