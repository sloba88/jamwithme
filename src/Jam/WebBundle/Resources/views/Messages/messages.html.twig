{% extends 'JamWebBundle::layoutNoSidebar.html.twig' %}

{% block main_content %}

    <div class="row messages-header">
        <div class="col-xs-12">
            <h1 class="title">Messages</h1>
            <a href="#" class="btn btn-compose">+ Compose new message</a>
        </div>
    </div><!--messages-header ends-->

    <div class="row messages-container">
        <div class="col-xs-12 conversations-box"></div>
    </div><!--messages-container ends-->

    <script type="text/template" id="conversationTemplate">
        <% _.each( rc, function( c, k ){ %>
        <div class="row message-single <% if (c.isRead == false) { %>unread<% } %> conversation-box <% if (k == 0 ){ %>first<% } %>" data-user="<%- c.other.username %>" data-id="<%- c.other.id %>">
            <div class="col-xs-4 col-sm-3 message-info">
                <img class="message-picture" src="{{ app.request.getBaseURL() }}/m/<%- c.other.username %>/avatar" alt="Pic">

                <h3 class="name"><%- c.other.username %></h3>

                <div class="time"><%- c.createdAt.toLocaleDateString() %> <%- c.createdAt.toLocaleTimeString() %></div>
            </div>
            <div class="col-xs-8 col-sm-9 message-content">
                <p><%- c.message %></p>
                <i class="fa fa-angle-right"></i>
            </div>
        </div><!--message-one ends-->
        <% }); %>
    </script>

{% endblock %}

{% block bottom_javascripts %}

    <script>

        var myID = {{ app.user.id }};

        $(document).ready(function () {

            if (typeof socket.emit != 'undefined'){
                setTimeout(function () {
                    socket.emit('getMyMessages', {userID: 'myID'});
                }, 500);
            }

            var messageTemplate = _.template($('#messageTemplate').html());
            var conversationTemplate = _.template($('#conversationTemplate').html());
            var conversations = [];
            var match = [];

            socket.on('myMessages', function (data) {

                console.log(data);

                $('.conversation-message-box').html('');
                $.each(data, function (index, val) {
                    //TODO: why am I not getting datetime from server?
                    val.createdAt = new Date(val.createdAt);

                    $('.conversation-message-box').append(messageTemplate(val));
                });

                $.each(data.reverse(), function (index, val) {
                    //TODO: why am I not getting datetime from server?
                    val.createdAt = new Date(val.createdAt);

                    if (val.to.id == myID) {
                        other = val.from;
                    } else {
                        other = val.to;
                    }

                    if (!_.findWhere(match, other)) {
                        match.push(other);
                        val.other = other;
                        conversations.push(val);
                    }
                });

                $('.conversations-box').append(conversationTemplate(conversations));
                scrollToBottom();
            });

        });
    </script>

{% endblock %}