{% extends 'JamWebBundle::layoutNoSidebar.html.twig' %}

{% block main_content %}

    <div class="row messages-header">
        <div class="col-xs-12">
            <h1 class="title">{{ 'text.messages'|trans }}</h1>
            <a href="#" class="btn btn-compose">+ {{ 'text.compose.new.message'|trans }}</a>
        </div>
    </div><!--messages-header ends-->

    <div class="row messages-container">
        <div class="col-xs-12 conversations-box"></div>
    </div><!--messages-container ends-->

    {# TODO: change class name from message-single to open-conversation because its confusing #}
    <script type="text/template" id="conversationTemplate">
        <div class="row open-conversation message-single <% if (rc.isRead == false) { %>unread<% } %> conversation-box first" data-id="<%- rc._id %>" data-user="<%- rc.fromData.username %>">
            <div class="col-xs-4 col-sm-3 message-info">
                <img class="message-picture" src="{{ app.request.getBaseURL() }}/m/<%- rc._lastMessage.from %>/avatar" alt="<%- rc._lastMessage.from %>">

                <h3 class="name"><%- rc.fromData.username %></h3>

                <div class="time"><%- rc._lastMessage.createdAt.toLocaleDateString() %> <%- rc._lastMessage.createdAt.toLocaleTimeString() %></div>
            </div>
            <div class="col-xs-8 col-sm-9 message-content">
                 <p><%- rc._lastMessage.message %></p>
                <i class="fa fa-angle-right"></i>
            </div>
        </div><!--message-one ends-->
    </script>

{% endblock %}

{% block bottom_javascripts %}

    <script>

        $(document).ready(function () {

            if (typeof socket.emit != 'undefined'){
                setTimeout(function () {
                    socket.emit('getMyConversations', {userID: '_user.id'});
                }, 500);
            }

            var messageTemplate = _.template($('#messageTemplate').html());
            var conversationTemplate = _.template($('#conversationTemplate').html());
            var conversations = [];
            var match = [];

            socket.on('myConversations', function (data) {

                console.log(data);

                /*
                $('.conversation-message-box').html('');
                $.each(data, function (index, val) {
                    //TODO: why am I not getting datetime from server?
                    val.createdAt = new Date(val.createdAt);

                    $('.conversation-message-box').append(messageTemplate(val));
                });


                $.each(data.reverse(), function (index, val) {
                    //TODO: why am I not getting datetime from server?
                    val.createdAt = new Date(val.createdAt);

                    if (val.to.id == myID) {
                        other = val.from;
                    } else {
                        other = val.to;
                    }

                    if (!_.findWhere(match, other)) {
                        match.push(other);
                        val.other = other;
                        conversations.push(val);
                    }
                });
                */

                $.each(data, function (index, val) {
                    console.log(val);
                    val._lastMessage.createdAt = new Date(val._lastMessage.createdAt);

                    $.each(val.participants, function (index, value) {
                        if (value !== _user.id) {
                            val.otherGuy = value;
                        }
                    });

                    $('.conversations-box').append(conversationTemplate(val));
                });

                scrollToBottom();
            });

        });
    </script>

{% endblock %}