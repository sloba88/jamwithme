{% extends '::base.html.twig' %}

{% block body %}

        {% for m in musicians %}
            <div class="col-md-2 user-box">
                <a href="{{ path('musician_profile', {'username': m.username}) }}" class="user-box-image-link">
                    <img src="{{ asset(m.images.first.getWebPath|default('/images/placeholder-user.jpg')) | imagine_filter('my_thumb') }}" class="img-circle" />
                </a>
                <div class="user-box-details">
                    <a href="{{ path('musician_profile', {'username': m.username}) }}">{{ m.username }}</a> <br />
                    <span class="user-box-genres"> {% for g in m.genres %}{{ g.name }}{% if not loop.last %} | {% endif %}{% endfor %}</span>
                </div>

            </div>
        {% endfor %}


    <div id="map-canvas" data-url="{{ path('musicians_find') }}" data-lat="{{ app.user.location.lat|default('') }}" data-lng="{{ app.user.location.lng|default('') }}"></div>

{% endblock %}


{% block javascripts %}

    <script>
        var map;
        var $map = $('#map-canvas');

        function initialize() {
            var mapOptions = {
                zoom: 14
            };
            map = new google.maps.Map(document.getElementById('map-canvas'),
                    mapOptions);
        }

        function getLocation(){
            if (navigator.geolocation){
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            }else{
                alert("Geolocation is not supported by this browser.");
            }
        }
        function showPosition(position){
            map.setCenter(new google.maps.LatLng(parseFloat(position.coords.latitude), position.coords.longitude));
        }

        function showError(error)
        {
            switch(error.code)
            {
                case error.PERMISSION_DENIED:
                    alert("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    alert("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("An unknown error occurred.");
                    break;
            }
        }

        $(function() {
            initialize();

            var url = $map.data('url');
            $.ajax({
                url: url
            }).done(function( result ) {
                if (result.status == 'success'){
                    $.each(result.data, function(k, v){
                        var marker = new google.maps.Marker({
                            position: new google.maps.LatLng(v.lat, v.lng),
                            map: map,
                            title: v.username
                        });

                        var contentString = '<div id="content"><a href="'+ v.url +'"><img src="'+ v.image +'" /><p>'+ v.username +'</p></a></div>';

                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });

                        google.maps.event.addListener(marker, 'mouseover', function() {
                            infowindow.open(map,marker);
                        });

                    });
                }
            });

            if ($map.data('lat') == ''){
                getLocation();
            }else{
                map.setCenter(new google.maps.LatLng(parseFloat($map.data('lat')), parseFloat($map.data('lng'))));
            }

        });





    </script>

{% endblock %}